syntax="proto2";

package yamcs.protobuf.services;

option java_package = "org.yamcs.protobuf";
option java_outer_classname = "ServicesServiceProto";
option java_multiple_files = true;

import "google/protobuf/empty.proto";

import "yamcs/api/annotations.proto";
import "yamcs/protobuf/services/services.proto";


service ServicesApi {

  // List services
  rpc ListServices(ListServicesRequest) returns (ListServicesResponse) {
    option (yamcs.api.route) = {
      get: "/api/services/{instance}"
    };
  }
  
  // Get a service
  rpc GetService(GetServiceRequest) returns (ServiceInfo) {
    option (yamcs.api.route) = {
      get: "/api/services/{instance}/{name}"
    };
  }
  
  // Start a service
  rpc StartService(StartServiceRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      post: "/api/services/{instance}/{name}:start"
    };
  }
  
  // Stop a service
  //
  // Once stopped, a service cannot be resumed. Instead a new service
  // instance will be created and started.
  rpc StopService(StopServiceRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      post: "/api/services/{instance}/{name}:stop"
    };
  }
}

message ListServicesRequest {
  // Yamcs instance name. Or _global for system-wide services. 
  optional string instance = 1;
}

message GetServiceRequest {
  // Yamcs instance name. Or _global for system-wide services.
  optional string instance = 1;

  // Service name
  optional string name = 2;
}

message StartServiceRequest {
  // Yamcs instance name. Or _global for system-wide services.
  optional string instance = 1;

  // Service name
  optional string name = 2;
}

message StopServiceRequest {
  // Yamcs instance name. Or _global for system-wide services.
  optional string instance = 1;

  // Service name
  optional string name = 2;
}

message ListServicesResponse {
  repeated ServiceInfo services = 1;
}
