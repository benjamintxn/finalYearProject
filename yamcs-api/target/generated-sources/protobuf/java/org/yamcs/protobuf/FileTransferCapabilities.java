// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yamcs/protobuf/filetransfer/filetransfer.proto

package org.yamcs.protobuf;

/**
 * <pre>
 *This message is used to configure the yacms-web
 * </pre>
 *
 * Protobuf type {@code yamcs.protobuf.filetransfer.FileTransferCapabilities}
 */
public final class FileTransferCapabilities extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:yamcs.protobuf.filetransfer.FileTransferCapabilities)
    FileTransferCapabilitiesOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FileTransferCapabilities.newBuilder() to construct.
  private FileTransferCapabilities(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FileTransferCapabilities() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FileTransferCapabilities();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.yamcs.protobuf.FileTransferProto.internal_static_yamcs_protobuf_filetransfer_FileTransferCapabilities_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.yamcs.protobuf.FileTransferProto.internal_static_yamcs_protobuf_filetransfer_FileTransferCapabilities_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.yamcs.protobuf.FileTransferCapabilities.class, org.yamcs.protobuf.FileTransferCapabilities.Builder.class);
  }

  private int bitField0_;
  public static final int UPLOAD_FIELD_NUMBER = 1;
  private boolean upload_;
  /**
   * <pre>
   *if true, yamcs-web shows a button for initiating an upload
   * </pre>
   *
   * <code>optional bool upload = 1;</code>
   * @return Whether the upload field is set.
   */
  @java.lang.Override
  public boolean hasUpload() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   *if true, yamcs-web shows a button for initiating an upload
   * </pre>
   *
   * <code>optional bool upload = 1;</code>
   * @return The upload.
   */
  @java.lang.Override
  public boolean getUpload() {
    return upload_;
  }

  public static final int DOWNLOAD_FIELD_NUMBER = 2;
  private boolean download_;
  /**
   * <pre>
   *if true, yamcs-web shows a button for initiating a download
   * </pre>
   *
   * <code>optional bool download = 2;</code>
   * @return Whether the download field is set.
   */
  @java.lang.Override
  public boolean hasDownload() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   *if true, yamcs-web shows a button for initiating a download
   * </pre>
   *
   * <code>optional bool download = 2;</code>
   * @return The download.
   */
  @java.lang.Override
  public boolean getDownload() {
    return download_;
  }

  public static final int RELIABILITY_FIELD_NUMBER = 3;
  private boolean reliability_;
  /**
   * <pre>
   * DEPRECATED: use a FileTransferOption in FileTransferServiceInfo to get a reliability toggle
   * </pre>
   *
   * <code>optional bool reliability = 3 [deprecated = true];</code>
   * @deprecated
   * @return Whether the reliability field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasReliability() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * DEPRECATED: use a FileTransferOption in FileTransferServiceInfo to get a reliability toggle
   * </pre>
   *
   * <code>optional bool reliability = 3 [deprecated = true];</code>
   * @deprecated
   * @return The reliability.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean getReliability() {
    return reliability_;
  }

  public static final int REMOTEPATH_FIELD_NUMBER = 4;
  private boolean remotePath_;
  /**
   * <pre>
   *if true, yamcs-web will show the section with the destination file/folder name (upload only)
   * </pre>
   *
   * <code>optional bool remotePath = 4;</code>
   * @return Whether the remotePath field is set.
   */
  @java.lang.Override
  public boolean hasRemotePath() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   *if true, yamcs-web will show the section with the destination file/folder name (upload only)
   * </pre>
   *
   * <code>optional bool remotePath = 4;</code>
   * @return The remotePath.
   */
  @java.lang.Override
  public boolean getRemotePath() {
    return remotePath_;
  }

  public static final int FILELIST_FIELD_NUMBER = 5;
  private boolean fileList_;
  /**
   * <pre>
   * true = service supports remote file list
   * </pre>
   *
   * <code>optional bool fileList = 5;</code>
   * @return Whether the fileList field is set.
   */
  @java.lang.Override
  public boolean hasFileList() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * true = service supports remote file list
   * </pre>
   *
   * <code>optional bool fileList = 5;</code>
   * @return The fileList.
   */
  @java.lang.Override
  public boolean getFileList() {
    return fileList_;
  }

  public static final int HASTRANSFERTYPE_FIELD_NUMBER = 6;
  private boolean hasTransferType_;
  /**
   * <pre>
   * if true, yamcs-web will show the "Transfer Type" string column
   * </pre>
   *
   * <code>optional bool hasTransferType = 6;</code>
   * @return Whether the hasTransferType field is set.
   */
  @java.lang.Override
  public boolean hasHasTransferType() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * if true, yamcs-web will show the "Transfer Type" string column
   * </pre>
   *
   * <code>optional bool hasTransferType = 6;</code>
   * @return The hasTransferType.
   */
  @java.lang.Override
  public boolean getHasTransferType() {
    return hasTransferType_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBool(1, upload_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBool(2, download_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(3, reliability_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeBool(4, remotePath_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeBool(5, fileList_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeBool(6, hasTransferType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, upload_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, download_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, reliability_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, remotePath_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, fileList_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, hasTransferType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.yamcs.protobuf.FileTransferCapabilities)) {
      return super.equals(obj);
    }
    org.yamcs.protobuf.FileTransferCapabilities other = (org.yamcs.protobuf.FileTransferCapabilities) obj;

    if (hasUpload() != other.hasUpload()) return false;
    if (hasUpload()) {
      if (getUpload()
          != other.getUpload()) return false;
    }
    if (hasDownload() != other.hasDownload()) return false;
    if (hasDownload()) {
      if (getDownload()
          != other.getDownload()) return false;
    }
    if (hasReliability() != other.hasReliability()) return false;
    if (hasReliability()) {
      if (getReliability()
          != other.getReliability()) return false;
    }
    if (hasRemotePath() != other.hasRemotePath()) return false;
    if (hasRemotePath()) {
      if (getRemotePath()
          != other.getRemotePath()) return false;
    }
    if (hasFileList() != other.hasFileList()) return false;
    if (hasFileList()) {
      if (getFileList()
          != other.getFileList()) return false;
    }
    if (hasHasTransferType() != other.hasHasTransferType()) return false;
    if (hasHasTransferType()) {
      if (getHasTransferType()
          != other.getHasTransferType()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasUpload()) {
      hash = (37 * hash) + UPLOAD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUpload());
    }
    if (hasDownload()) {
      hash = (37 * hash) + DOWNLOAD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDownload());
    }
    if (hasReliability()) {
      hash = (37 * hash) + RELIABILITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReliability());
    }
    if (hasRemotePath()) {
      hash = (37 * hash) + REMOTEPATH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRemotePath());
    }
    if (hasFileList()) {
      hash = (37 * hash) + FILELIST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFileList());
    }
    if (hasHasTransferType()) {
      hash = (37 * hash) + HASTRANSFERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasTransferType());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.yamcs.protobuf.FileTransferCapabilities parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.yamcs.protobuf.FileTransferCapabilities prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *This message is used to configure the yacms-web
   * </pre>
   *
   * Protobuf type {@code yamcs.protobuf.filetransfer.FileTransferCapabilities}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:yamcs.protobuf.filetransfer.FileTransferCapabilities)
      org.yamcs.protobuf.FileTransferCapabilitiesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.yamcs.protobuf.FileTransferProto.internal_static_yamcs_protobuf_filetransfer_FileTransferCapabilities_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.yamcs.protobuf.FileTransferProto.internal_static_yamcs_protobuf_filetransfer_FileTransferCapabilities_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.yamcs.protobuf.FileTransferCapabilities.class, org.yamcs.protobuf.FileTransferCapabilities.Builder.class);
    }

    // Construct using org.yamcs.protobuf.FileTransferCapabilities.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      upload_ = false;
      bitField0_ = (bitField0_ & ~0x00000001);
      download_ = false;
      bitField0_ = (bitField0_ & ~0x00000002);
      reliability_ = false;
      bitField0_ = (bitField0_ & ~0x00000004);
      remotePath_ = false;
      bitField0_ = (bitField0_ & ~0x00000008);
      fileList_ = false;
      bitField0_ = (bitField0_ & ~0x00000010);
      hasTransferType_ = false;
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.yamcs.protobuf.FileTransferProto.internal_static_yamcs_protobuf_filetransfer_FileTransferCapabilities_descriptor;
    }

    @java.lang.Override
    public org.yamcs.protobuf.FileTransferCapabilities getDefaultInstanceForType() {
      return org.yamcs.protobuf.FileTransferCapabilities.getDefaultInstance();
    }

    @java.lang.Override
    public org.yamcs.protobuf.FileTransferCapabilities build() {
      org.yamcs.protobuf.FileTransferCapabilities result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.yamcs.protobuf.FileTransferCapabilities buildPartial() {
      org.yamcs.protobuf.FileTransferCapabilities result = new org.yamcs.protobuf.FileTransferCapabilities(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.upload_ = upload_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.download_ = download_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.reliability_ = reliability_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.remotePath_ = remotePath_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.fileList_ = fileList_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.hasTransferType_ = hasTransferType_;
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.yamcs.protobuf.FileTransferCapabilities) {
        return mergeFrom((org.yamcs.protobuf.FileTransferCapabilities)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.yamcs.protobuf.FileTransferCapabilities other) {
      if (other == org.yamcs.protobuf.FileTransferCapabilities.getDefaultInstance()) return this;
      if (other.hasUpload()) {
        setUpload(other.getUpload());
      }
      if (other.hasDownload()) {
        setDownload(other.getDownload());
      }
      if (other.hasReliability()) {
        setReliability(other.getReliability());
      }
      if (other.hasRemotePath()) {
        setRemotePath(other.getRemotePath());
      }
      if (other.hasFileList()) {
        setFileList(other.getFileList());
      }
      if (other.hasHasTransferType()) {
        setHasTransferType(other.getHasTransferType());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              upload_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              download_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              reliability_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              remotePath_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              fileList_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              hasTransferType_ = input.readBool();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean upload_ ;
    /**
     * <pre>
     *if true, yamcs-web shows a button for initiating an upload
     * </pre>
     *
     * <code>optional bool upload = 1;</code>
     * @return Whether the upload field is set.
     */
    @java.lang.Override
    public boolean hasUpload() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *if true, yamcs-web shows a button for initiating an upload
     * </pre>
     *
     * <code>optional bool upload = 1;</code>
     * @return The upload.
     */
    @java.lang.Override
    public boolean getUpload() {
      return upload_;
    }
    /**
     * <pre>
     *if true, yamcs-web shows a button for initiating an upload
     * </pre>
     *
     * <code>optional bool upload = 1;</code>
     * @param value The upload to set.
     * @return This builder for chaining.
     */
    public Builder setUpload(boolean value) {
      bitField0_ |= 0x00000001;
      upload_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *if true, yamcs-web shows a button for initiating an upload
     * </pre>
     *
     * <code>optional bool upload = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearUpload() {
      bitField0_ = (bitField0_ & ~0x00000001);
      upload_ = false;
      onChanged();
      return this;
    }

    private boolean download_ ;
    /**
     * <pre>
     *if true, yamcs-web shows a button for initiating a download
     * </pre>
     *
     * <code>optional bool download = 2;</code>
     * @return Whether the download field is set.
     */
    @java.lang.Override
    public boolean hasDownload() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *if true, yamcs-web shows a button for initiating a download
     * </pre>
     *
     * <code>optional bool download = 2;</code>
     * @return The download.
     */
    @java.lang.Override
    public boolean getDownload() {
      return download_;
    }
    /**
     * <pre>
     *if true, yamcs-web shows a button for initiating a download
     * </pre>
     *
     * <code>optional bool download = 2;</code>
     * @param value The download to set.
     * @return This builder for chaining.
     */
    public Builder setDownload(boolean value) {
      bitField0_ |= 0x00000002;
      download_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *if true, yamcs-web shows a button for initiating a download
     * </pre>
     *
     * <code>optional bool download = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDownload() {
      bitField0_ = (bitField0_ & ~0x00000002);
      download_ = false;
      onChanged();
      return this;
    }

    private boolean reliability_ ;
    /**
     * <pre>
     * DEPRECATED: use a FileTransferOption in FileTransferServiceInfo to get a reliability toggle
     * </pre>
     *
     * <code>optional bool reliability = 3 [deprecated = true];</code>
     * @deprecated
     * @return Whether the reliability field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasReliability() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * DEPRECATED: use a FileTransferOption in FileTransferServiceInfo to get a reliability toggle
     * </pre>
     *
     * <code>optional bool reliability = 3 [deprecated = true];</code>
     * @deprecated
     * @return The reliability.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getReliability() {
      return reliability_;
    }
    /**
     * <pre>
     * DEPRECATED: use a FileTransferOption in FileTransferServiceInfo to get a reliability toggle
     * </pre>
     *
     * <code>optional bool reliability = 3 [deprecated = true];</code>
     * @deprecated
     * @param value The reliability to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setReliability(boolean value) {
      bitField0_ |= 0x00000004;
      reliability_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DEPRECATED: use a FileTransferOption in FileTransferServiceInfo to get a reliability toggle
     * </pre>
     *
     * <code>optional bool reliability = 3 [deprecated = true];</code>
     * @deprecated
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearReliability() {
      bitField0_ = (bitField0_ & ~0x00000004);
      reliability_ = false;
      onChanged();
      return this;
    }

    private boolean remotePath_ ;
    /**
     * <pre>
     *if true, yamcs-web will show the section with the destination file/folder name (upload only)
     * </pre>
     *
     * <code>optional bool remotePath = 4;</code>
     * @return Whether the remotePath field is set.
     */
    @java.lang.Override
    public boolean hasRemotePath() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *if true, yamcs-web will show the section with the destination file/folder name (upload only)
     * </pre>
     *
     * <code>optional bool remotePath = 4;</code>
     * @return The remotePath.
     */
    @java.lang.Override
    public boolean getRemotePath() {
      return remotePath_;
    }
    /**
     * <pre>
     *if true, yamcs-web will show the section with the destination file/folder name (upload only)
     * </pre>
     *
     * <code>optional bool remotePath = 4;</code>
     * @param value The remotePath to set.
     * @return This builder for chaining.
     */
    public Builder setRemotePath(boolean value) {
      bitField0_ |= 0x00000008;
      remotePath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *if true, yamcs-web will show the section with the destination file/folder name (upload only)
     * </pre>
     *
     * <code>optional bool remotePath = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearRemotePath() {
      bitField0_ = (bitField0_ & ~0x00000008);
      remotePath_ = false;
      onChanged();
      return this;
    }

    private boolean fileList_ ;
    /**
     * <pre>
     * true = service supports remote file list
     * </pre>
     *
     * <code>optional bool fileList = 5;</code>
     * @return Whether the fileList field is set.
     */
    @java.lang.Override
    public boolean hasFileList() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * true = service supports remote file list
     * </pre>
     *
     * <code>optional bool fileList = 5;</code>
     * @return The fileList.
     */
    @java.lang.Override
    public boolean getFileList() {
      return fileList_;
    }
    /**
     * <pre>
     * true = service supports remote file list
     * </pre>
     *
     * <code>optional bool fileList = 5;</code>
     * @param value The fileList to set.
     * @return This builder for chaining.
     */
    public Builder setFileList(boolean value) {
      bitField0_ |= 0x00000010;
      fileList_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * true = service supports remote file list
     * </pre>
     *
     * <code>optional bool fileList = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileList() {
      bitField0_ = (bitField0_ & ~0x00000010);
      fileList_ = false;
      onChanged();
      return this;
    }

    private boolean hasTransferType_ ;
    /**
     * <pre>
     * if true, yamcs-web will show the "Transfer Type" string column
     * </pre>
     *
     * <code>optional bool hasTransferType = 6;</code>
     * @return Whether the hasTransferType field is set.
     */
    @java.lang.Override
    public boolean hasHasTransferType() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * if true, yamcs-web will show the "Transfer Type" string column
     * </pre>
     *
     * <code>optional bool hasTransferType = 6;</code>
     * @return The hasTransferType.
     */
    @java.lang.Override
    public boolean getHasTransferType() {
      return hasTransferType_;
    }
    /**
     * <pre>
     * if true, yamcs-web will show the "Transfer Type" string column
     * </pre>
     *
     * <code>optional bool hasTransferType = 6;</code>
     * @param value The hasTransferType to set.
     * @return This builder for chaining.
     */
    public Builder setHasTransferType(boolean value) {
      bitField0_ |= 0x00000020;
      hasTransferType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * if true, yamcs-web will show the "Transfer Type" string column
     * </pre>
     *
     * <code>optional bool hasTransferType = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearHasTransferType() {
      bitField0_ = (bitField0_ & ~0x00000020);
      hasTransferType_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:yamcs.protobuf.filetransfer.FileTransferCapabilities)
  }

  // @@protoc_insertion_point(class_scope:yamcs.protobuf.filetransfer.FileTransferCapabilities)
  private static final org.yamcs.protobuf.FileTransferCapabilities DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.yamcs.protobuf.FileTransferCapabilities();
  }

  public static org.yamcs.protobuf.FileTransferCapabilities getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<FileTransferCapabilities>
      PARSER = new com.google.protobuf.AbstractParser<FileTransferCapabilities>() {
    @java.lang.Override
    public FileTransferCapabilities parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<FileTransferCapabilities> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FileTransferCapabilities> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.yamcs.protobuf.FileTransferCapabilities getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

