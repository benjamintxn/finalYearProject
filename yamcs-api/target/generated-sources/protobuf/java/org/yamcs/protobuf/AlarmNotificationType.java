// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yamcs/protobuf/alarms/alarms.proto

package org.yamcs.protobuf;

/**
 * Protobuf enum {@code yamcs.protobuf.alarms.AlarmNotificationType}
 */
public enum AlarmNotificationType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Initial active alarms at the moment of request
   * </pre>
   *
   * <code>ACTIVE = 1;</code>
   */
  ACTIVE(1),
  /**
   * <pre>
   * Whenever a new alarm triggers
   * </pre>
   *
   * <code>TRIGGERED = 2;</code>
   */
  TRIGGERED(2),
  /**
   * <pre>
   * Whenever an alarm jumps severity
   * </pre>
   *
   * <code>SEVERITY_INCREASED = 3;</code>
   */
  SEVERITY_INCREASED(3),
  /**
   * <pre>
   * Whenever a value is updated (even if that value is not a violation by itself)
   * </pre>
   *
   * <code>VALUE_UPDATED = 4;</code>
   */
  VALUE_UPDATED(4),
  /**
   * <pre>
   * Whenever somebody acknowledged an alarm (it could be that it is still OOL)
   * </pre>
   *
   * <code>ACKNOWLEDGED = 5;</code>
   */
  ACKNOWLEDGED(5),
  /**
   * <pre>
   * When the alarm was really cleared by the server (acknowledged &amp;&amp; not OOL)
   * </pre>
   *
   * <code>CLEARED = 6;</code>
   */
  CLEARED(6),
  /**
   * <pre>
   * When the parameter that triggered the alarm has returned to normal (the alarm may still be triggered if it has not been acknowledged)
   * </pre>
   *
   * <code>RTN = 7;</code>
   */
  RTN(7),
  /**
   * <pre>
   *when the alarm has been shelved
   * </pre>
   *
   * <code>SHELVED = 8;</code>
   */
  SHELVED(8),
  /**
   * <pre>
   *when the alarm has been unshelved (either by operator request or automatically at timer expiration)
   * </pre>
   *
   * <code>UNSHELVED = 9;</code>
   */
  UNSHELVED(9),
  /**
   * <pre>
   *when a latching alarm has been reset  
   * </pre>
   *
   * <code>RESET = 10;</code>
   */
  RESET(10),
  ;

  /**
   * <pre>
   * Initial active alarms at the moment of request
   * </pre>
   *
   * <code>ACTIVE = 1;</code>
   */
  public static final int ACTIVE_VALUE = 1;
  /**
   * <pre>
   * Whenever a new alarm triggers
   * </pre>
   *
   * <code>TRIGGERED = 2;</code>
   */
  public static final int TRIGGERED_VALUE = 2;
  /**
   * <pre>
   * Whenever an alarm jumps severity
   * </pre>
   *
   * <code>SEVERITY_INCREASED = 3;</code>
   */
  public static final int SEVERITY_INCREASED_VALUE = 3;
  /**
   * <pre>
   * Whenever a value is updated (even if that value is not a violation by itself)
   * </pre>
   *
   * <code>VALUE_UPDATED = 4;</code>
   */
  public static final int VALUE_UPDATED_VALUE = 4;
  /**
   * <pre>
   * Whenever somebody acknowledged an alarm (it could be that it is still OOL)
   * </pre>
   *
   * <code>ACKNOWLEDGED = 5;</code>
   */
  public static final int ACKNOWLEDGED_VALUE = 5;
  /**
   * <pre>
   * When the alarm was really cleared by the server (acknowledged &amp;&amp; not OOL)
   * </pre>
   *
   * <code>CLEARED = 6;</code>
   */
  public static final int CLEARED_VALUE = 6;
  /**
   * <pre>
   * When the parameter that triggered the alarm has returned to normal (the alarm may still be triggered if it has not been acknowledged)
   * </pre>
   *
   * <code>RTN = 7;</code>
   */
  public static final int RTN_VALUE = 7;
  /**
   * <pre>
   *when the alarm has been shelved
   * </pre>
   *
   * <code>SHELVED = 8;</code>
   */
  public static final int SHELVED_VALUE = 8;
  /**
   * <pre>
   *when the alarm has been unshelved (either by operator request or automatically at timer expiration)
   * </pre>
   *
   * <code>UNSHELVED = 9;</code>
   */
  public static final int UNSHELVED_VALUE = 9;
  /**
   * <pre>
   *when a latching alarm has been reset  
   * </pre>
   *
   * <code>RESET = 10;</code>
   */
  public static final int RESET_VALUE = 10;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AlarmNotificationType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AlarmNotificationType forNumber(int value) {
    switch (value) {
      case 1: return ACTIVE;
      case 2: return TRIGGERED;
      case 3: return SEVERITY_INCREASED;
      case 4: return VALUE_UPDATED;
      case 5: return ACKNOWLEDGED;
      case 6: return CLEARED;
      case 7: return RTN;
      case 8: return SHELVED;
      case 9: return UNSHELVED;
      case 10: return RESET;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AlarmNotificationType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AlarmNotificationType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AlarmNotificationType>() {
          public AlarmNotificationType findValueByNumber(int number) {
            return AlarmNotificationType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.yamcs.protobuf.AlarmsProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final AlarmNotificationType[] VALUES = values();

  public static AlarmNotificationType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AlarmNotificationType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:yamcs.protobuf.alarms.AlarmNotificationType)
}

