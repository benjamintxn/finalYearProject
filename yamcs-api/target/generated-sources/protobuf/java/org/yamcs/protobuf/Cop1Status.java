// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yamcs/protobuf/cop1/cop1.proto

package org.yamcs.protobuf;

/**
 * Protobuf type {@code yamcs.protobuf.cop1.Cop1Status}
 */
public final class Cop1Status extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:yamcs.protobuf.cop1.Cop1Status)
    Cop1StatusOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Cop1Status.newBuilder() to construct.
  private Cop1Status(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Cop1Status() {
    link_ = "";
    state_ = 1;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Cop1Status();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.yamcs.protobuf.Cop1Proto.internal_static_yamcs_protobuf_cop1_Cop1Status_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.yamcs.protobuf.Cop1Proto.internal_static_yamcs_protobuf_cop1_Cop1Status_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.yamcs.protobuf.Cop1Status.class, org.yamcs.protobuf.Cop1Status.Builder.class);
  }

  private int bitField0_;
  public static final int LINK_FIELD_NUMBER = 11;
  private volatile java.lang.Object link_;
  /**
   * <pre>
   * Link name for which this status applies. 
   * It is present when this message is sent over the websocket as there might
   * be multiple COP-1 links subscribed
   * </pre>
   *
   * <code>optional string link = 11;</code>
   * @return Whether the link field is set.
   */
  @java.lang.Override
  public boolean hasLink() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Link name for which this status applies. 
   * It is present when this message is sent over the websocket as there might
   * be multiple COP-1 links subscribed
   * </pre>
   *
   * <code>optional string link = 11;</code>
   * @return The link.
   */
  @java.lang.Override
  public java.lang.String getLink() {
    java.lang.Object ref = link_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        link_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Link name for which this status applies. 
   * It is present when this message is sent over the websocket as there might
   * be multiple COP-1 links subscribed
   * </pre>
   *
   * <code>optional string link = 11;</code>
   * @return The bytes for link.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLinkBytes() {
    java.lang.Object ref = link_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      link_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COP1ACTIVE_FIELD_NUMBER = 1;
  private boolean cop1Active_;
  /**
   * <pre>
   * If false, all frames are immediately transmitted (i.e. COP-1 is disabled)
   * </pre>
   *
   * <code>optional bool cop1Active = 1;</code>
   * @return Whether the cop1Active field is set.
   */
  @java.lang.Override
  public boolean hasCop1Active() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * If false, all frames are immediately transmitted (i.e. COP-1 is disabled)
   * </pre>
   *
   * <code>optional bool cop1Active = 1;</code>
   * @return The cop1Active.
   */
  @java.lang.Override
  public boolean getCop1Active() {
    return cop1Active_;
  }

  public static final int SETBYPASSALL_FIELD_NUMBER = 2;
  private boolean setBypassAll_;
  /**
   * <pre>
   * Relevant if cop1Active = false -&gt; set the bypass flag on all outgoing frames 
   * </pre>
   *
   * <code>optional bool setBypassAll = 2;</code>
   * @return Whether the setBypassAll field is set.
   */
  @java.lang.Override
  public boolean hasSetBypassAll() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Relevant if cop1Active = false -&gt; set the bypass flag on all outgoing frames 
   * </pre>
   *
   * <code>optional bool setBypassAll = 2;</code>
   * @return The setBypassAll.
   */
  @java.lang.Override
  public boolean getSetBypassAll() {
    return setBypassAll_;
  }

  public static final int CLCW_FIELD_NUMBER = 3;
  private org.yamcs.protobuf.Clcw clcw_;
  /**
   * <pre>
   * Last received CLCW
   * </pre>
   *
   * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
   * @return Whether the clcw field is set.
   */
  @java.lang.Override
  public boolean hasClcw() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Last received CLCW
   * </pre>
   *
   * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
   * @return The clcw.
   */
  @java.lang.Override
  public org.yamcs.protobuf.Clcw getClcw() {
    return clcw_ == null ? org.yamcs.protobuf.Clcw.getDefaultInstance() : clcw_;
  }
  /**
   * <pre>
   * Last received CLCW
   * </pre>
   *
   * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
   */
  @java.lang.Override
  public org.yamcs.protobuf.ClcwOrBuilder getClcwOrBuilder() {
    return clcw_ == null ? org.yamcs.protobuf.Clcw.getDefaultInstance() : clcw_;
  }

  public static final int STATE_FIELD_NUMBER = 4;
  private int state_;
  /**
   * <pre>
   * Current state of FOP-1 state machine, only relevant if cop1Active = true
   * </pre>
   *
   * <code>optional .yamcs.protobuf.cop1.Cop1State state = 4;</code>
   * @return Whether the state field is set.
   */
  @java.lang.Override public boolean hasState() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Current state of FOP-1 state machine, only relevant if cop1Active = true
   * </pre>
   *
   * <code>optional .yamcs.protobuf.cop1.Cop1State state = 4;</code>
   * @return The state.
   */
  @java.lang.Override public org.yamcs.protobuf.Cop1State getState() {
    @SuppressWarnings("deprecation")
    org.yamcs.protobuf.Cop1State result = org.yamcs.protobuf.Cop1State.valueOf(state_);
    return result == null ? org.yamcs.protobuf.Cop1State.ACTIVE : result;
  }

  public static final int VS_FIELD_NUMBER = 5;
  private int vS_;
  /**
   * <pre>
   * V(S) - Transmitter Frame Sequence Number;
   * </pre>
   *
   * <code>optional uint32 vS = 5;</code>
   * @return Whether the vS field is set.
   */
  @java.lang.Override
  public boolean hasVS() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * V(S) - Transmitter Frame Sequence Number;
   * </pre>
   *
   * <code>optional uint32 vS = 5;</code>
   * @return The vS.
   */
  @java.lang.Override
  public int getVS() {
    return vS_;
  }

  public static final int NNR_FIELD_NUMBER = 6;
  private int nnR_;
  /**
   * <pre>
   * The nR from the previous CLCW
   * </pre>
   *
   * <code>optional uint32 nnR = 6;</code>
   * @return Whether the nnR field is set.
   */
  @java.lang.Override
  public boolean hasNnR() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * The nR from the previous CLCW
   * </pre>
   *
   * <code>optional uint32 nnR = 6;</code>
   * @return The nnR.
   */
  @java.lang.Override
  public int getNnR() {
    return nnR_;
  }

  public static final int WAITQUEUENUMTC_FIELD_NUMBER = 7;
  private int waitQueueNumTC_;
  /**
   * <pre>
   * Number of TC packets in the wait queue
   * </pre>
   *
   * <code>optional uint32 waitQueueNumTC = 7;</code>
   * @return Whether the waitQueueNumTC field is set.
   */
  @java.lang.Override
  public boolean hasWaitQueueNumTC() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * Number of TC packets in the wait queue
   * </pre>
   *
   * <code>optional uint32 waitQueueNumTC = 7;</code>
   * @return The waitQueueNumTC.
   */
  @java.lang.Override
  public int getWaitQueueNumTC() {
    return waitQueueNumTC_;
  }

  public static final int SENTQUEUENUMFRAMES_FIELD_NUMBER = 8;
  private int sentQueueNumFrames_;
  /**
   * <pre>
   * Number of unacknowledged frames in the sent queue
   * </pre>
   *
   * <code>optional uint32 sentQueueNumFrames = 8;</code>
   * @return Whether the sentQueueNumFrames field is set.
   */
  @java.lang.Override
  public boolean hasSentQueueNumFrames() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * Number of unacknowledged frames in the sent queue
   * </pre>
   *
   * <code>optional uint32 sentQueueNumFrames = 8;</code>
   * @return The sentQueueNumFrames.
   */
  @java.lang.Override
  public int getSentQueueNumFrames() {
    return sentQueueNumFrames_;
  }

  public static final int OUTQUEUENUMFRAMES_FIELD_NUMBER = 9;
  private int outQueueNumFrames_;
  /**
   * <pre>
   * Number of frames in the out queue (waiting to be picked up by the master chain
   * multiplexer)
   * </pre>
   *
   * <code>optional uint32 outQueueNumFrames = 9;</code>
   * @return Whether the outQueueNumFrames field is set.
   */
  @java.lang.Override
  public boolean hasOutQueueNumFrames() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * Number of frames in the out queue (waiting to be picked up by the master chain
   * multiplexer)
   * </pre>
   *
   * <code>optional uint32 outQueueNumFrames = 9;</code>
   * @return The outQueueNumFrames.
   */
  @java.lang.Override
  public int getOutQueueNumFrames() {
    return outQueueNumFrames_;
  }

  public static final int TXCOUNT_FIELD_NUMBER = 10;
  private int txCount_;
  /**
   * <pre>
   * How many times the last frame has been transmitted
   * </pre>
   *
   * <code>optional uint32 txCount = 10;</code>
   * @return Whether the txCount field is set.
   */
  @java.lang.Override
  public boolean hasTxCount() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * How many times the last frame has been transmitted
   * </pre>
   *
   * <code>optional uint32 txCount = 10;</code>
   * @return The txCount.
   */
  @java.lang.Override
  public int getTxCount() {
    return txCount_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBool(1, cop1Active_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(2, setBypassAll_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(3, getClcw());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeEnum(4, state_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeUInt32(5, vS_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeUInt32(6, nnR_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeUInt32(7, waitQueueNumTC_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeUInt32(8, sentQueueNumFrames_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeUInt32(9, outQueueNumFrames_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeUInt32(10, txCount_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, link_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, cop1Active_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, setBypassAll_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getClcw());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, state_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, vS_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, nnR_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, waitQueueNumTC_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(8, sentQueueNumFrames_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(9, outQueueNumFrames_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, txCount_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, link_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.yamcs.protobuf.Cop1Status)) {
      return super.equals(obj);
    }
    org.yamcs.protobuf.Cop1Status other = (org.yamcs.protobuf.Cop1Status) obj;

    if (hasLink() != other.hasLink()) return false;
    if (hasLink()) {
      if (!getLink()
          .equals(other.getLink())) return false;
    }
    if (hasCop1Active() != other.hasCop1Active()) return false;
    if (hasCop1Active()) {
      if (getCop1Active()
          != other.getCop1Active()) return false;
    }
    if (hasSetBypassAll() != other.hasSetBypassAll()) return false;
    if (hasSetBypassAll()) {
      if (getSetBypassAll()
          != other.getSetBypassAll()) return false;
    }
    if (hasClcw() != other.hasClcw()) return false;
    if (hasClcw()) {
      if (!getClcw()
          .equals(other.getClcw())) return false;
    }
    if (hasState() != other.hasState()) return false;
    if (hasState()) {
      if (state_ != other.state_) return false;
    }
    if (hasVS() != other.hasVS()) return false;
    if (hasVS()) {
      if (getVS()
          != other.getVS()) return false;
    }
    if (hasNnR() != other.hasNnR()) return false;
    if (hasNnR()) {
      if (getNnR()
          != other.getNnR()) return false;
    }
    if (hasWaitQueueNumTC() != other.hasWaitQueueNumTC()) return false;
    if (hasWaitQueueNumTC()) {
      if (getWaitQueueNumTC()
          != other.getWaitQueueNumTC()) return false;
    }
    if (hasSentQueueNumFrames() != other.hasSentQueueNumFrames()) return false;
    if (hasSentQueueNumFrames()) {
      if (getSentQueueNumFrames()
          != other.getSentQueueNumFrames()) return false;
    }
    if (hasOutQueueNumFrames() != other.hasOutQueueNumFrames()) return false;
    if (hasOutQueueNumFrames()) {
      if (getOutQueueNumFrames()
          != other.getOutQueueNumFrames()) return false;
    }
    if (hasTxCount() != other.hasTxCount()) return false;
    if (hasTxCount()) {
      if (getTxCount()
          != other.getTxCount()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasLink()) {
      hash = (37 * hash) + LINK_FIELD_NUMBER;
      hash = (53 * hash) + getLink().hashCode();
    }
    if (hasCop1Active()) {
      hash = (37 * hash) + COP1ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCop1Active());
    }
    if (hasSetBypassAll()) {
      hash = (37 * hash) + SETBYPASSALL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSetBypassAll());
    }
    if (hasClcw()) {
      hash = (37 * hash) + CLCW_FIELD_NUMBER;
      hash = (53 * hash) + getClcw().hashCode();
    }
    if (hasState()) {
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
    }
    if (hasVS()) {
      hash = (37 * hash) + VS_FIELD_NUMBER;
      hash = (53 * hash) + getVS();
    }
    if (hasNnR()) {
      hash = (37 * hash) + NNR_FIELD_NUMBER;
      hash = (53 * hash) + getNnR();
    }
    if (hasWaitQueueNumTC()) {
      hash = (37 * hash) + WAITQUEUENUMTC_FIELD_NUMBER;
      hash = (53 * hash) + getWaitQueueNumTC();
    }
    if (hasSentQueueNumFrames()) {
      hash = (37 * hash) + SENTQUEUENUMFRAMES_FIELD_NUMBER;
      hash = (53 * hash) + getSentQueueNumFrames();
    }
    if (hasOutQueueNumFrames()) {
      hash = (37 * hash) + OUTQUEUENUMFRAMES_FIELD_NUMBER;
      hash = (53 * hash) + getOutQueueNumFrames();
    }
    if (hasTxCount()) {
      hash = (37 * hash) + TXCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getTxCount();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.yamcs.protobuf.Cop1Status parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.yamcs.protobuf.Cop1Status parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.yamcs.protobuf.Cop1Status parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.yamcs.protobuf.Cop1Status parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.yamcs.protobuf.Cop1Status parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.yamcs.protobuf.Cop1Status parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.yamcs.protobuf.Cop1Status parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.yamcs.protobuf.Cop1Status parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.yamcs.protobuf.Cop1Status parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.yamcs.protobuf.Cop1Status parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.yamcs.protobuf.Cop1Status parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.yamcs.protobuf.Cop1Status parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.yamcs.protobuf.Cop1Status prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code yamcs.protobuf.cop1.Cop1Status}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:yamcs.protobuf.cop1.Cop1Status)
      org.yamcs.protobuf.Cop1StatusOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.yamcs.protobuf.Cop1Proto.internal_static_yamcs_protobuf_cop1_Cop1Status_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.yamcs.protobuf.Cop1Proto.internal_static_yamcs_protobuf_cop1_Cop1Status_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.yamcs.protobuf.Cop1Status.class, org.yamcs.protobuf.Cop1Status.Builder.class);
    }

    // Construct using org.yamcs.protobuf.Cop1Status.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getClcwFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      link_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      cop1Active_ = false;
      bitField0_ = (bitField0_ & ~0x00000002);
      setBypassAll_ = false;
      bitField0_ = (bitField0_ & ~0x00000004);
      if (clcwBuilder_ == null) {
        clcw_ = null;
      } else {
        clcwBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      state_ = 1;
      bitField0_ = (bitField0_ & ~0x00000010);
      vS_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      nnR_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      waitQueueNumTC_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      sentQueueNumFrames_ = 0;
      bitField0_ = (bitField0_ & ~0x00000100);
      outQueueNumFrames_ = 0;
      bitField0_ = (bitField0_ & ~0x00000200);
      txCount_ = 0;
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.yamcs.protobuf.Cop1Proto.internal_static_yamcs_protobuf_cop1_Cop1Status_descriptor;
    }

    @java.lang.Override
    public org.yamcs.protobuf.Cop1Status getDefaultInstanceForType() {
      return org.yamcs.protobuf.Cop1Status.getDefaultInstance();
    }

    @java.lang.Override
    public org.yamcs.protobuf.Cop1Status build() {
      org.yamcs.protobuf.Cop1Status result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.yamcs.protobuf.Cop1Status buildPartial() {
      org.yamcs.protobuf.Cop1Status result = new org.yamcs.protobuf.Cop1Status(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.link_ = link_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.cop1Active_ = cop1Active_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.setBypassAll_ = setBypassAll_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        if (clcwBuilder_ == null) {
          result.clcw_ = clcw_;
        } else {
          result.clcw_ = clcwBuilder_.build();
        }
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        to_bitField0_ |= 0x00000010;
      }
      result.state_ = state_;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.vS_ = vS_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.nnR_ = nnR_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.waitQueueNumTC_ = waitQueueNumTC_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.sentQueueNumFrames_ = sentQueueNumFrames_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.outQueueNumFrames_ = outQueueNumFrames_;
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.txCount_ = txCount_;
        to_bitField0_ |= 0x00000400;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.yamcs.protobuf.Cop1Status) {
        return mergeFrom((org.yamcs.protobuf.Cop1Status)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.yamcs.protobuf.Cop1Status other) {
      if (other == org.yamcs.protobuf.Cop1Status.getDefaultInstance()) return this;
      if (other.hasLink()) {
        bitField0_ |= 0x00000001;
        link_ = other.link_;
        onChanged();
      }
      if (other.hasCop1Active()) {
        setCop1Active(other.getCop1Active());
      }
      if (other.hasSetBypassAll()) {
        setSetBypassAll(other.getSetBypassAll());
      }
      if (other.hasClcw()) {
        mergeClcw(other.getClcw());
      }
      if (other.hasState()) {
        setState(other.getState());
      }
      if (other.hasVS()) {
        setVS(other.getVS());
      }
      if (other.hasNnR()) {
        setNnR(other.getNnR());
      }
      if (other.hasWaitQueueNumTC()) {
        setWaitQueueNumTC(other.getWaitQueueNumTC());
      }
      if (other.hasSentQueueNumFrames()) {
        setSentQueueNumFrames(other.getSentQueueNumFrames());
      }
      if (other.hasOutQueueNumFrames()) {
        setOutQueueNumFrames(other.getOutQueueNumFrames());
      }
      if (other.hasTxCount()) {
        setTxCount(other.getTxCount());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              cop1Active_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 8
            case 16: {
              setBypassAll_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getClcwFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 26
            case 32: {
              int tmpRaw = input.readEnum();
              org.yamcs.protobuf.Cop1State tmpValue =
                  org.yamcs.protobuf.Cop1State.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(4, tmpRaw);
              } else {
                state_ = tmpRaw;
                bitField0_ |= 0x00000010;
              }
              break;
            } // case 32
            case 40: {
              vS_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 40
            case 48: {
              nnR_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 48
            case 56: {
              waitQueueNumTC_ = input.readUInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 56
            case 64: {
              sentQueueNumFrames_ = input.readUInt32();
              bitField0_ |= 0x00000100;
              break;
            } // case 64
            case 72: {
              outQueueNumFrames_ = input.readUInt32();
              bitField0_ |= 0x00000200;
              break;
            } // case 72
            case 80: {
              txCount_ = input.readUInt32();
              bitField0_ |= 0x00000400;
              break;
            } // case 80
            case 90: {
              link_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 90
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object link_ = "";
    /**
     * <pre>
     * Link name for which this status applies. 
     * It is present when this message is sent over the websocket as there might
     * be multiple COP-1 links subscribed
     * </pre>
     *
     * <code>optional string link = 11;</code>
     * @return Whether the link field is set.
     */
    public boolean hasLink() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Link name for which this status applies. 
     * It is present when this message is sent over the websocket as there might
     * be multiple COP-1 links subscribed
     * </pre>
     *
     * <code>optional string link = 11;</code>
     * @return The link.
     */
    public java.lang.String getLink() {
      java.lang.Object ref = link_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          link_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Link name for which this status applies. 
     * It is present when this message is sent over the websocket as there might
     * be multiple COP-1 links subscribed
     * </pre>
     *
     * <code>optional string link = 11;</code>
     * @return The bytes for link.
     */
    public com.google.protobuf.ByteString
        getLinkBytes() {
      java.lang.Object ref = link_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        link_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Link name for which this status applies. 
     * It is present when this message is sent over the websocket as there might
     * be multiple COP-1 links subscribed
     * </pre>
     *
     * <code>optional string link = 11;</code>
     * @param value The link to set.
     * @return This builder for chaining.
     */
    public Builder setLink(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      link_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Link name for which this status applies. 
     * It is present when this message is sent over the websocket as there might
     * be multiple COP-1 links subscribed
     * </pre>
     *
     * <code>optional string link = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearLink() {
      bitField0_ = (bitField0_ & ~0x00000001);
      link_ = getDefaultInstance().getLink();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Link name for which this status applies. 
     * It is present when this message is sent over the websocket as there might
     * be multiple COP-1 links subscribed
     * </pre>
     *
     * <code>optional string link = 11;</code>
     * @param value The bytes for link to set.
     * @return This builder for chaining.
     */
    public Builder setLinkBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      link_ = value;
      onChanged();
      return this;
    }

    private boolean cop1Active_ ;
    /**
     * <pre>
     * If false, all frames are immediately transmitted (i.e. COP-1 is disabled)
     * </pre>
     *
     * <code>optional bool cop1Active = 1;</code>
     * @return Whether the cop1Active field is set.
     */
    @java.lang.Override
    public boolean hasCop1Active() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * If false, all frames are immediately transmitted (i.e. COP-1 is disabled)
     * </pre>
     *
     * <code>optional bool cop1Active = 1;</code>
     * @return The cop1Active.
     */
    @java.lang.Override
    public boolean getCop1Active() {
      return cop1Active_;
    }
    /**
     * <pre>
     * If false, all frames are immediately transmitted (i.e. COP-1 is disabled)
     * </pre>
     *
     * <code>optional bool cop1Active = 1;</code>
     * @param value The cop1Active to set.
     * @return This builder for chaining.
     */
    public Builder setCop1Active(boolean value) {
      bitField0_ |= 0x00000002;
      cop1Active_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If false, all frames are immediately transmitted (i.e. COP-1 is disabled)
     * </pre>
     *
     * <code>optional bool cop1Active = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCop1Active() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cop1Active_ = false;
      onChanged();
      return this;
    }

    private boolean setBypassAll_ ;
    /**
     * <pre>
     * Relevant if cop1Active = false -&gt; set the bypass flag on all outgoing frames 
     * </pre>
     *
     * <code>optional bool setBypassAll = 2;</code>
     * @return Whether the setBypassAll field is set.
     */
    @java.lang.Override
    public boolean hasSetBypassAll() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Relevant if cop1Active = false -&gt; set the bypass flag on all outgoing frames 
     * </pre>
     *
     * <code>optional bool setBypassAll = 2;</code>
     * @return The setBypassAll.
     */
    @java.lang.Override
    public boolean getSetBypassAll() {
      return setBypassAll_;
    }
    /**
     * <pre>
     * Relevant if cop1Active = false -&gt; set the bypass flag on all outgoing frames 
     * </pre>
     *
     * <code>optional bool setBypassAll = 2;</code>
     * @param value The setBypassAll to set.
     * @return This builder for chaining.
     */
    public Builder setSetBypassAll(boolean value) {
      bitField0_ |= 0x00000004;
      setBypassAll_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Relevant if cop1Active = false -&gt; set the bypass flag on all outgoing frames 
     * </pre>
     *
     * <code>optional bool setBypassAll = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSetBypassAll() {
      bitField0_ = (bitField0_ & ~0x00000004);
      setBypassAll_ = false;
      onChanged();
      return this;
    }

    private org.yamcs.protobuf.Clcw clcw_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.yamcs.protobuf.Clcw, org.yamcs.protobuf.Clcw.Builder, org.yamcs.protobuf.ClcwOrBuilder> clcwBuilder_;
    /**
     * <pre>
     * Last received CLCW
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
     * @return Whether the clcw field is set.
     */
    public boolean hasClcw() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Last received CLCW
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
     * @return The clcw.
     */
    public org.yamcs.protobuf.Clcw getClcw() {
      if (clcwBuilder_ == null) {
        return clcw_ == null ? org.yamcs.protobuf.Clcw.getDefaultInstance() : clcw_;
      } else {
        return clcwBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Last received CLCW
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
     */
    public Builder setClcw(org.yamcs.protobuf.Clcw value) {
      if (clcwBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clcw_ = value;
        onChanged();
      } else {
        clcwBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Last received CLCW
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
     */
    public Builder setClcw(
        org.yamcs.protobuf.Clcw.Builder builderForValue) {
      if (clcwBuilder_ == null) {
        clcw_ = builderForValue.build();
        onChanged();
      } else {
        clcwBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Last received CLCW
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
     */
    public Builder mergeClcw(org.yamcs.protobuf.Clcw value) {
      if (clcwBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
            clcw_ != null &&
            clcw_ != org.yamcs.protobuf.Clcw.getDefaultInstance()) {
          clcw_ =
            org.yamcs.protobuf.Clcw.newBuilder(clcw_).mergeFrom(value).buildPartial();
        } else {
          clcw_ = value;
        }
        onChanged();
      } else {
        clcwBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Last received CLCW
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
     */
    public Builder clearClcw() {
      if (clcwBuilder_ == null) {
        clcw_ = null;
        onChanged();
      } else {
        clcwBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }
    /**
     * <pre>
     * Last received CLCW
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
     */
    public org.yamcs.protobuf.Clcw.Builder getClcwBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getClcwFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Last received CLCW
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
     */
    public org.yamcs.protobuf.ClcwOrBuilder getClcwOrBuilder() {
      if (clcwBuilder_ != null) {
        return clcwBuilder_.getMessageOrBuilder();
      } else {
        return clcw_ == null ?
            org.yamcs.protobuf.Clcw.getDefaultInstance() : clcw_;
      }
    }
    /**
     * <pre>
     * Last received CLCW
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Clcw clcw = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.yamcs.protobuf.Clcw, org.yamcs.protobuf.Clcw.Builder, org.yamcs.protobuf.ClcwOrBuilder> 
        getClcwFieldBuilder() {
      if (clcwBuilder_ == null) {
        clcwBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.yamcs.protobuf.Clcw, org.yamcs.protobuf.Clcw.Builder, org.yamcs.protobuf.ClcwOrBuilder>(
                getClcw(),
                getParentForChildren(),
                isClean());
        clcw_ = null;
      }
      return clcwBuilder_;
    }

    private int state_ = 1;
    /**
     * <pre>
     * Current state of FOP-1 state machine, only relevant if cop1Active = true
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Cop1State state = 4;</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override public boolean hasState() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Current state of FOP-1 state machine, only relevant if cop1Active = true
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Cop1State state = 4;</code>
     * @return The state.
     */
    @java.lang.Override
    public org.yamcs.protobuf.Cop1State getState() {
      @SuppressWarnings("deprecation")
      org.yamcs.protobuf.Cop1State result = org.yamcs.protobuf.Cop1State.valueOf(state_);
      return result == null ? org.yamcs.protobuf.Cop1State.ACTIVE : result;
    }
    /**
     * <pre>
     * Current state of FOP-1 state machine, only relevant if cop1Active = true
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Cop1State state = 4;</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(org.yamcs.protobuf.Cop1State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Current state of FOP-1 state machine, only relevant if cop1Active = true
     * </pre>
     *
     * <code>optional .yamcs.protobuf.cop1.Cop1State state = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000010);
      state_ = 1;
      onChanged();
      return this;
    }

    private int vS_ ;
    /**
     * <pre>
     * V(S) - Transmitter Frame Sequence Number;
     * </pre>
     *
     * <code>optional uint32 vS = 5;</code>
     * @return Whether the vS field is set.
     */
    @java.lang.Override
    public boolean hasVS() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * V(S) - Transmitter Frame Sequence Number;
     * </pre>
     *
     * <code>optional uint32 vS = 5;</code>
     * @return The vS.
     */
    @java.lang.Override
    public int getVS() {
      return vS_;
    }
    /**
     * <pre>
     * V(S) - Transmitter Frame Sequence Number;
     * </pre>
     *
     * <code>optional uint32 vS = 5;</code>
     * @param value The vS to set.
     * @return This builder for chaining.
     */
    public Builder setVS(int value) {
      bitField0_ |= 0x00000020;
      vS_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * V(S) - Transmitter Frame Sequence Number;
     * </pre>
     *
     * <code>optional uint32 vS = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearVS() {
      bitField0_ = (bitField0_ & ~0x00000020);
      vS_ = 0;
      onChanged();
      return this;
    }

    private int nnR_ ;
    /**
     * <pre>
     * The nR from the previous CLCW
     * </pre>
     *
     * <code>optional uint32 nnR = 6;</code>
     * @return Whether the nnR field is set.
     */
    @java.lang.Override
    public boolean hasNnR() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The nR from the previous CLCW
     * </pre>
     *
     * <code>optional uint32 nnR = 6;</code>
     * @return The nnR.
     */
    @java.lang.Override
    public int getNnR() {
      return nnR_;
    }
    /**
     * <pre>
     * The nR from the previous CLCW
     * </pre>
     *
     * <code>optional uint32 nnR = 6;</code>
     * @param value The nnR to set.
     * @return This builder for chaining.
     */
    public Builder setNnR(int value) {
      bitField0_ |= 0x00000040;
      nnR_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The nR from the previous CLCW
     * </pre>
     *
     * <code>optional uint32 nnR = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearNnR() {
      bitField0_ = (bitField0_ & ~0x00000040);
      nnR_ = 0;
      onChanged();
      return this;
    }

    private int waitQueueNumTC_ ;
    /**
     * <pre>
     * Number of TC packets in the wait queue
     * </pre>
     *
     * <code>optional uint32 waitQueueNumTC = 7;</code>
     * @return Whether the waitQueueNumTC field is set.
     */
    @java.lang.Override
    public boolean hasWaitQueueNumTC() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Number of TC packets in the wait queue
     * </pre>
     *
     * <code>optional uint32 waitQueueNumTC = 7;</code>
     * @return The waitQueueNumTC.
     */
    @java.lang.Override
    public int getWaitQueueNumTC() {
      return waitQueueNumTC_;
    }
    /**
     * <pre>
     * Number of TC packets in the wait queue
     * </pre>
     *
     * <code>optional uint32 waitQueueNumTC = 7;</code>
     * @param value The waitQueueNumTC to set.
     * @return This builder for chaining.
     */
    public Builder setWaitQueueNumTC(int value) {
      bitField0_ |= 0x00000080;
      waitQueueNumTC_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of TC packets in the wait queue
     * </pre>
     *
     * <code>optional uint32 waitQueueNumTC = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearWaitQueueNumTC() {
      bitField0_ = (bitField0_ & ~0x00000080);
      waitQueueNumTC_ = 0;
      onChanged();
      return this;
    }

    private int sentQueueNumFrames_ ;
    /**
     * <pre>
     * Number of unacknowledged frames in the sent queue
     * </pre>
     *
     * <code>optional uint32 sentQueueNumFrames = 8;</code>
     * @return Whether the sentQueueNumFrames field is set.
     */
    @java.lang.Override
    public boolean hasSentQueueNumFrames() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Number of unacknowledged frames in the sent queue
     * </pre>
     *
     * <code>optional uint32 sentQueueNumFrames = 8;</code>
     * @return The sentQueueNumFrames.
     */
    @java.lang.Override
    public int getSentQueueNumFrames() {
      return sentQueueNumFrames_;
    }
    /**
     * <pre>
     * Number of unacknowledged frames in the sent queue
     * </pre>
     *
     * <code>optional uint32 sentQueueNumFrames = 8;</code>
     * @param value The sentQueueNumFrames to set.
     * @return This builder for chaining.
     */
    public Builder setSentQueueNumFrames(int value) {
      bitField0_ |= 0x00000100;
      sentQueueNumFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of unacknowledged frames in the sent queue
     * </pre>
     *
     * <code>optional uint32 sentQueueNumFrames = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearSentQueueNumFrames() {
      bitField0_ = (bitField0_ & ~0x00000100);
      sentQueueNumFrames_ = 0;
      onChanged();
      return this;
    }

    private int outQueueNumFrames_ ;
    /**
     * <pre>
     * Number of frames in the out queue (waiting to be picked up by the master chain
     * multiplexer)
     * </pre>
     *
     * <code>optional uint32 outQueueNumFrames = 9;</code>
     * @return Whether the outQueueNumFrames field is set.
     */
    @java.lang.Override
    public boolean hasOutQueueNumFrames() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Number of frames in the out queue (waiting to be picked up by the master chain
     * multiplexer)
     * </pre>
     *
     * <code>optional uint32 outQueueNumFrames = 9;</code>
     * @return The outQueueNumFrames.
     */
    @java.lang.Override
    public int getOutQueueNumFrames() {
      return outQueueNumFrames_;
    }
    /**
     * <pre>
     * Number of frames in the out queue (waiting to be picked up by the master chain
     * multiplexer)
     * </pre>
     *
     * <code>optional uint32 outQueueNumFrames = 9;</code>
     * @param value The outQueueNumFrames to set.
     * @return This builder for chaining.
     */
    public Builder setOutQueueNumFrames(int value) {
      bitField0_ |= 0x00000200;
      outQueueNumFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of frames in the out queue (waiting to be picked up by the master chain
     * multiplexer)
     * </pre>
     *
     * <code>optional uint32 outQueueNumFrames = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutQueueNumFrames() {
      bitField0_ = (bitField0_ & ~0x00000200);
      outQueueNumFrames_ = 0;
      onChanged();
      return this;
    }

    private int txCount_ ;
    /**
     * <pre>
     * How many times the last frame has been transmitted
     * </pre>
     *
     * <code>optional uint32 txCount = 10;</code>
     * @return Whether the txCount field is set.
     */
    @java.lang.Override
    public boolean hasTxCount() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * How many times the last frame has been transmitted
     * </pre>
     *
     * <code>optional uint32 txCount = 10;</code>
     * @return The txCount.
     */
    @java.lang.Override
    public int getTxCount() {
      return txCount_;
    }
    /**
     * <pre>
     * How many times the last frame has been transmitted
     * </pre>
     *
     * <code>optional uint32 txCount = 10;</code>
     * @param value The txCount to set.
     * @return This builder for chaining.
     */
    public Builder setTxCount(int value) {
      bitField0_ |= 0x00000400;
      txCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How many times the last frame has been transmitted
     * </pre>
     *
     * <code>optional uint32 txCount = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTxCount() {
      bitField0_ = (bitField0_ & ~0x00000400);
      txCount_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:yamcs.protobuf.cop1.Cop1Status)
  }

  // @@protoc_insertion_point(class_scope:yamcs.protobuf.cop1.Cop1Status)
  private static final org.yamcs.protobuf.Cop1Status DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.yamcs.protobuf.Cop1Status();
  }

  public static org.yamcs.protobuf.Cop1Status getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<Cop1Status>
      PARSER = new com.google.protobuf.AbstractParser<Cop1Status>() {
    @java.lang.Override
    public Cop1Status parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Cop1Status> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Cop1Status> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.yamcs.protobuf.Cop1Status getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

