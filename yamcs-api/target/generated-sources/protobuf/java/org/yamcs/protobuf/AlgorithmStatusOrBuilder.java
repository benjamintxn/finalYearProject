// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yamcs/protobuf/processing/processing.proto

package org.yamcs.protobuf;

public interface AlgorithmStatusOrBuilder extends
    // @@protoc_insertion_point(interface_extends:yamcs.protobuf.processing.AlgorithmStatus)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *true if the algorithm is active
   * </pre>
   *
   * <code>optional bool active = 1;</code>
   * @return Whether the active field is set.
   */
  boolean hasActive();
  /**
   * <pre>
   *true if the algorithm is active
   * </pre>
   *
   * <code>optional bool active = 1;</code>
   * @return The active.
   */
  boolean getActive();

  /**
   * <pre>
   *true if the tracing has been enabled 
   * </pre>
   *
   * <code>optional bool traceEnabled = 2;</code>
   * @return Whether the traceEnabled field is set.
   */
  boolean hasTraceEnabled();
  /**
   * <pre>
   *true if the tracing has been enabled 
   * </pre>
   *
   * <code>optional bool traceEnabled = 2;</code>
   * @return The traceEnabled.
   */
  boolean getTraceEnabled();

  /**
   * <pre>
   * how many times the algorithm ran (successfully or with error)
   * </pre>
   *
   * <code>optional uint32 runCount = 3;</code>
   * @return Whether the runCount field is set.
   */
  boolean hasRunCount();
  /**
   * <pre>
   * how many times the algorithm ran (successfully or with error)
   * </pre>
   *
   * <code>optional uint32 runCount = 3;</code>
   * @return The runCount.
   */
  int getRunCount();

  /**
   * <pre>
   * when the algorithm was last run
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp lastRun = 4;</code>
   * @return Whether the lastRun field is set.
   */
  boolean hasLastRun();
  /**
   * <pre>
   * when the algorithm was last run
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp lastRun = 4;</code>
   * @return The lastRun.
   */
  com.google.protobuf.Timestamp getLastRun();
  /**
   * <pre>
   * when the algorithm was last run
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp lastRun = 4;</code>
   */
  com.google.protobuf.TimestampOrBuilder getLastRunOrBuilder();

  /**
   * <pre>
   * how many times the algorithm ran with errors
   * </pre>
   *
   * <code>optional uint32 errorCount = 5;</code>
   * @return Whether the errorCount field is set.
   */
  boolean hasErrorCount();
  /**
   * <pre>
   * how many times the algorithm ran with errors
   * </pre>
   *
   * <code>optional uint32 errorCount = 5;</code>
   * @return The errorCount.
   */
  int getErrorCount();

  /**
   * <pre>
   * if the algorithm produced an error, 
   * the fields below contain the error message and the time when the error was raised 
   * </pre>
   *
   * <code>optional string errorMessage = 6;</code>
   * @return Whether the errorMessage field is set.
   */
  boolean hasErrorMessage();
  /**
   * <pre>
   * if the algorithm produced an error, 
   * the fields below contain the error message and the time when the error was raised 
   * </pre>
   *
   * <code>optional string errorMessage = 6;</code>
   * @return The errorMessage.
   */
  java.lang.String getErrorMessage();
  /**
   * <pre>
   * if the algorithm produced an error, 
   * the fields below contain the error message and the time when the error was raised 
   * </pre>
   *
   * <code>optional string errorMessage = 6;</code>
   * @return The bytes for errorMessage.
   */
  com.google.protobuf.ByteString
      getErrorMessageBytes();

  /**
   * <code>optional .google.protobuf.Timestamp errorTime = 7;</code>
   * @return Whether the errorTime field is set.
   */
  boolean hasErrorTime();
  /**
   * <code>optional .google.protobuf.Timestamp errorTime = 7;</code>
   * @return The errorTime.
   */
  com.google.protobuf.Timestamp getErrorTime();
  /**
   * <code>optional .google.protobuf.Timestamp errorTime = 7;</code>
   */
  com.google.protobuf.TimestampOrBuilder getErrorTimeOrBuilder();

  /**
   * <pre>
   *total execution time in nanoseconds
   * </pre>
   *
   * <code>optional uint64 execTimeNs = 8;</code>
   * @return Whether the execTimeNs field is set.
   */
  boolean hasExecTimeNs();
  /**
   * <pre>
   *total execution time in nanoseconds
   * </pre>
   *
   * <code>optional uint64 execTimeNs = 8;</code>
   * @return The execTimeNs.
   */
  long getExecTimeNs();
}
