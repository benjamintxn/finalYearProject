// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yamcs/protobuf/processing/processing.proto

package org.yamcs.protobuf;

public interface GetParameterValueRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:yamcs.protobuf.processing.GetParameterValueRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Yamcs instance name.
   * </pre>
   *
   * <code>optional string instance = 1;</code>
   * @return Whether the instance field is set.
   */
  boolean hasInstance();
  /**
   * <pre>
   * Yamcs instance name.
   * </pre>
   *
   * <code>optional string instance = 1;</code>
   * @return The instance.
   */
  java.lang.String getInstance();
  /**
   * <pre>
   * Yamcs instance name.
   * </pre>
   *
   * <code>optional string instance = 1;</code>
   * @return The bytes for instance.
   */
  com.google.protobuf.ByteString
      getInstanceBytes();

  /**
   * <pre>
   * Processor name.
   * </pre>
   *
   * <code>optional string processor = 2;</code>
   * @return Whether the processor field is set.
   */
  boolean hasProcessor();
  /**
   * <pre>
   * Processor name.
   * </pre>
   *
   * <code>optional string processor = 2;</code>
   * @return The processor.
   */
  java.lang.String getProcessor();
  /**
   * <pre>
   * Processor name.
   * </pre>
   *
   * <code>optional string processor = 2;</code>
   * @return The bytes for processor.
   */
  com.google.protobuf.ByteString
      getProcessorBytes();

  /**
   * <pre>
   * Parameter name. 
   * </pre>
   *
   * <code>optional string name = 3;</code>
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   * <pre>
   * Parameter name. 
   * </pre>
   *
   * <code>optional string name = 3;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Parameter name. 
   * </pre>
   *
   * <code>optional string name = 3;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Whether the latest cached value may be returned. Default: ``yes``.
   * </pre>
   *
   * <code>optional bool fromCache = 4;</code>
   * @return Whether the fromCache field is set.
   */
  boolean hasFromCache();
  /**
   * <pre>
   * Whether the latest cached value may be returned. Default: ``yes``.
   * </pre>
   *
   * <code>optional bool fromCache = 4;</code>
   * @return The fromCache.
   */
  boolean getFromCache();

  /**
   * <pre>
   * Time in milliseconds to wait on a value (only considered if
   * ``fromCache=no``). When the timeout is met, the call will return
   * with no or partial data. Default: ``10000``.
   * </pre>
   *
   * <code>optional uint64 timeout = 5;</code>
   * @return Whether the timeout field is set.
   */
  boolean hasTimeout();
  /**
   * <pre>
   * Time in milliseconds to wait on a value (only considered if
   * ``fromCache=no``). When the timeout is met, the call will return
   * with no or partial data. Default: ``10000``.
   * </pre>
   *
   * <code>optional uint64 timeout = 5;</code>
   * @return The timeout.
   */
  long getTimeout();
}
