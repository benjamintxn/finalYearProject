// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yamcs/protobuf/alarms/alarms.proto

package org.yamcs.protobuf;

public interface AlarmDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:yamcs.protobuf.alarms.AlarmData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .yamcs.protobuf.alarms.AlarmType type = 1;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <code>optional .yamcs.protobuf.alarms.AlarmType type = 1;</code>
   * @return The type.
   */
  org.yamcs.protobuf.AlarmType getType();

  /**
   * <code>optional .google.protobuf.Timestamp triggerTime = 2;</code>
   * @return Whether the triggerTime field is set.
   */
  boolean hasTriggerTime();
  /**
   * <code>optional .google.protobuf.Timestamp triggerTime = 2;</code>
   * @return The triggerTime.
   */
  com.google.protobuf.Timestamp getTriggerTime();
  /**
   * <code>optional .google.protobuf.Timestamp triggerTime = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getTriggerTimeOrBuilder();

  /**
   * <pre>
   * For parameter alarms, this is the id of the parameters
   * For event alarms
   *   - the id.namespace is /yamcs/event/&lt;EVENT_SOURCE&gt;, unless 
   *     EVENT_SOURCE starts with a "/" in which case the namespace
   *     is just the &lt;EVENT_SOURCE&gt;
   *   - the id.name is the &lt;EVENT_TYPE&gt;
   * </pre>
   *
   * <code>optional .yamcs.protobuf.NamedObjectId id = 3;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * For parameter alarms, this is the id of the parameters
   * For event alarms
   *   - the id.namespace is /yamcs/event/&lt;EVENT_SOURCE&gt;, unless 
   *     EVENT_SOURCE starts with a "/" in which case the namespace
   *     is just the &lt;EVENT_SOURCE&gt;
   *   - the id.name is the &lt;EVENT_TYPE&gt;
   * </pre>
   *
   * <code>optional .yamcs.protobuf.NamedObjectId id = 3;</code>
   * @return The id.
   */
  org.yamcs.protobuf.Yamcs.NamedObjectId getId();
  /**
   * <pre>
   * For parameter alarms, this is the id of the parameters
   * For event alarms
   *   - the id.namespace is /yamcs/event/&lt;EVENT_SOURCE&gt;, unless 
   *     EVENT_SOURCE starts with a "/" in which case the namespace
   *     is just the &lt;EVENT_SOURCE&gt;
   *   - the id.name is the &lt;EVENT_TYPE&gt;
   * </pre>
   *
   * <code>optional .yamcs.protobuf.NamedObjectId id = 3;</code>
   */
  org.yamcs.protobuf.Yamcs.NamedObjectIdOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * Distinguisher between multiple alarms for the same id
   * </pre>
   *
   * <code>optional uint32 seqNum = 4;</code>
   * @return Whether the seqNum field is set.
   */
  boolean hasSeqNum();
  /**
   * <pre>
   * Distinguisher between multiple alarms for the same id
   * </pre>
   *
   * <code>optional uint32 seqNum = 4;</code>
   * @return The seqNum.
   */
  int getSeqNum();

  /**
   * <code>optional .yamcs.protobuf.alarms.AlarmSeverity severity = 5;</code>
   * @return Whether the severity field is set.
   */
  boolean hasSeverity();
  /**
   * <code>optional .yamcs.protobuf.alarms.AlarmSeverity severity = 5;</code>
   * @return The severity.
   */
  org.yamcs.protobuf.AlarmSeverity getSeverity();

  /**
   * <pre>
   * Number of times the object was in alarm state
   * </pre>
   *
   * <code>optional uint32 violations = 6;</code>
   * @return Whether the violations field is set.
   */
  boolean hasViolations();
  /**
   * <pre>
   * Number of times the object was in alarm state
   * </pre>
   *
   * <code>optional uint32 violations = 6;</code>
   * @return The violations.
   */
  int getViolations();

  /**
   * <pre>
   * Number of samples received for the object
   * </pre>
   *
   * <code>optional uint32 count = 7;</code>
   * @return Whether the count field is set.
   */
  boolean hasCount();
  /**
   * <pre>
   * Number of samples received for the object
   * </pre>
   *
   * <code>optional uint32 count = 7;</code>
   * @return The count.
   */
  int getCount();

  /**
   * <code>optional .yamcs.protobuf.alarms.AcknowledgeInfo acknowledgeInfo = 8;</code>
   * @return Whether the acknowledgeInfo field is set.
   */
  boolean hasAcknowledgeInfo();
  /**
   * <code>optional .yamcs.protobuf.alarms.AcknowledgeInfo acknowledgeInfo = 8;</code>
   * @return The acknowledgeInfo.
   */
  org.yamcs.protobuf.AcknowledgeInfo getAcknowledgeInfo();
  /**
   * <code>optional .yamcs.protobuf.alarms.AcknowledgeInfo acknowledgeInfo = 8;</code>
   */
  org.yamcs.protobuf.AcknowledgeInfoOrBuilder getAcknowledgeInfoOrBuilder();

  /**
   * <code>optional .yamcs.protobuf.alarms.AlarmNotificationType notificationType = 9;</code>
   * @return Whether the notificationType field is set.
   */
  boolean hasNotificationType();
  /**
   * <code>optional .yamcs.protobuf.alarms.AlarmNotificationType notificationType = 9;</code>
   * @return The notificationType.
   */
  org.yamcs.protobuf.AlarmNotificationType getNotificationType();

  /**
   * <pre>
   * Additional detail in case the alarm is of type PARAMETER
   * </pre>
   *
   * <code>optional .yamcs.protobuf.alarms.ParameterAlarmData parameterDetail = 10;</code>
   * @return Whether the parameterDetail field is set.
   */
  boolean hasParameterDetail();
  /**
   * <pre>
   * Additional detail in case the alarm is of type PARAMETER
   * </pre>
   *
   * <code>optional .yamcs.protobuf.alarms.ParameterAlarmData parameterDetail = 10;</code>
   * @return The parameterDetail.
   */
  org.yamcs.protobuf.ParameterAlarmData getParameterDetail();
  /**
   * <pre>
   * Additional detail in case the alarm is of type PARAMETER
   * </pre>
   *
   * <code>optional .yamcs.protobuf.alarms.ParameterAlarmData parameterDetail = 10;</code>
   */
  org.yamcs.protobuf.ParameterAlarmDataOrBuilder getParameterDetailOrBuilder();

  /**
   * <pre>
   * Additional detail in case the alarm is of type EVENT
   * </pre>
   *
   * <code>optional .yamcs.protobuf.alarms.EventAlarmData eventDetail = 11;</code>
   * @return Whether the eventDetail field is set.
   */
  boolean hasEventDetail();
  /**
   * <pre>
   * Additional detail in case the alarm is of type EVENT
   * </pre>
   *
   * <code>optional .yamcs.protobuf.alarms.EventAlarmData eventDetail = 11;</code>
   * @return The eventDetail.
   */
  org.yamcs.protobuf.EventAlarmData getEventDetail();
  /**
   * <pre>
   * Additional detail in case the alarm is of type EVENT
   * </pre>
   *
   * <code>optional .yamcs.protobuf.alarms.EventAlarmData eventDetail = 11;</code>
   */
  org.yamcs.protobuf.EventAlarmDataOrBuilder getEventDetailOrBuilder();

  /**
   * <pre>
   * Whether the alarm will stay triggered even when the process is OK
   * </pre>
   *
   * <code>optional bool latching = 12;</code>
   * @return Whether the latching field is set.
   */
  boolean hasLatching();
  /**
   * <pre>
   * Whether the alarm will stay triggered even when the process is OK
   * </pre>
   *
   * <code>optional bool latching = 12;</code>
   * @return The latching.
   */
  boolean getLatching();

  /**
   * <pre>
   * if the process that generated the alarm is ok (i.e. parameter is within limits)
   * </pre>
   *
   * <code>optional bool processOK = 13;</code>
   * @return Whether the processOK field is set.
   */
  boolean hasProcessOK();
  /**
   * <pre>
   * if the process that generated the alarm is ok (i.e. parameter is within limits)
   * </pre>
   *
   * <code>optional bool processOK = 13;</code>
   * @return The processOK.
   */
  boolean getProcessOK();

  /**
   * <pre>
   * triggered is same with processOK except when the alarm is latching
   * </pre>
   *
   * <code>optional bool triggered = 14;</code>
   * @return Whether the triggered field is set.
   */
  boolean hasTriggered();
  /**
   * <pre>
   * triggered is same with processOK except when the alarm is latching
   * </pre>
   *
   * <code>optional bool triggered = 14;</code>
   * @return The triggered.
   */
  boolean getTriggered();

  /**
   * <pre>
   * if the operator has acknowledged the alarm
   * </pre>
   *
   * <code>optional bool acknowledged = 15;</code>
   * @return Whether the acknowledged field is set.
   */
  boolean hasAcknowledged();
  /**
   * <pre>
   * if the operator has acknowledged the alarm
   * </pre>
   *
   * <code>optional bool acknowledged = 15;</code>
   * @return The acknowledged.
   */
  boolean getAcknowledged();

  /**
   * <pre>
   * Details in case the alarm was shelved
   * </pre>
   *
   * <code>optional .yamcs.protobuf.alarms.ShelveInfo shelveInfo = 16;</code>
   * @return Whether the shelveInfo field is set.
   */
  boolean hasShelveInfo();
  /**
   * <pre>
   * Details in case the alarm was shelved
   * </pre>
   *
   * <code>optional .yamcs.protobuf.alarms.ShelveInfo shelveInfo = 16;</code>
   * @return The shelveInfo.
   */
  org.yamcs.protobuf.ShelveInfo getShelveInfo();
  /**
   * <pre>
   * Details in case the alarm was shelved
   * </pre>
   *
   * <code>optional .yamcs.protobuf.alarms.ShelveInfo shelveInfo = 16;</code>
   */
  org.yamcs.protobuf.ShelveInfoOrBuilder getShelveInfoOrBuilder();

  /**
   * <code>optional .yamcs.protobuf.alarms.ClearInfo clearInfo = 17;</code>
   * @return Whether the clearInfo field is set.
   */
  boolean hasClearInfo();
  /**
   * <code>optional .yamcs.protobuf.alarms.ClearInfo clearInfo = 17;</code>
   * @return The clearInfo.
   */
  org.yamcs.protobuf.ClearInfo getClearInfo();
  /**
   * <code>optional .yamcs.protobuf.alarms.ClearInfo clearInfo = 17;</code>
   */
  org.yamcs.protobuf.ClearInfoOrBuilder getClearInfoOrBuilder();

  /**
   * <pre>
   * Time when the alarm was last updated
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp updateTime = 18;</code>
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();
  /**
   * <pre>
   * Time when the alarm was last updated
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp updateTime = 18;</code>
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   * <pre>
   * Time when the alarm was last updated
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp updateTime = 18;</code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();
}
