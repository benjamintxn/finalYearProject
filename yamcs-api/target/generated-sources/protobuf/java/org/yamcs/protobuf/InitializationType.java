// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yamcs/protobuf/cop1/cop1.proto

package org.yamcs.protobuf;

/**
 * Protobuf enum {@code yamcs.protobuf.cop1.InitializationType}
 */
public enum InitializationType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * CLCW will be expected from the remote system and used to initiate the vS
   * </pre>
   *
   * <code>WITH_CLCW_CHECK = 1;</code>
   */
  WITH_CLCW_CHECK(1),
  /**
   * <pre>
   * Initiate without waiting for CLCW
   * </pre>
   *
   * <code>WITHOUT_CLCW_CHECK = 2;</code>
   */
  WITHOUT_CLCW_CHECK(2),
  /**
   * <pre>
   * This causes a BC Unlock frame to be sent to the remote system.
   * </pre>
   *
   * <code>UNLOCK = 3;</code>
   */
  UNLOCK(3),
  /**
   * <pre>
   * Initiate AD with set V(R). This will cause a BC frame to be sent to the remote system
   * </pre>
   *
   * <code>SET_VR = 4;</code>
   */
  SET_VR(4),
  ;

  /**
   * <pre>
   * CLCW will be expected from the remote system and used to initiate the vS
   * </pre>
   *
   * <code>WITH_CLCW_CHECK = 1;</code>
   */
  public static final int WITH_CLCW_CHECK_VALUE = 1;
  /**
   * <pre>
   * Initiate without waiting for CLCW
   * </pre>
   *
   * <code>WITHOUT_CLCW_CHECK = 2;</code>
   */
  public static final int WITHOUT_CLCW_CHECK_VALUE = 2;
  /**
   * <pre>
   * This causes a BC Unlock frame to be sent to the remote system.
   * </pre>
   *
   * <code>UNLOCK = 3;</code>
   */
  public static final int UNLOCK_VALUE = 3;
  /**
   * <pre>
   * Initiate AD with set V(R). This will cause a BC frame to be sent to the remote system
   * </pre>
   *
   * <code>SET_VR = 4;</code>
   */
  public static final int SET_VR_VALUE = 4;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static InitializationType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static InitializationType forNumber(int value) {
    switch (value) {
      case 1: return WITH_CLCW_CHECK;
      case 2: return WITHOUT_CLCW_CHECK;
      case 3: return UNLOCK;
      case 4: return SET_VR;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<InitializationType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      InitializationType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<InitializationType>() {
          public InitializationType findValueByNumber(int number) {
            return InitializationType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.yamcs.protobuf.Cop1Proto.getDescriptor().getEnumTypes().get(0);
  }

  private static final InitializationType[] VALUES = values();

  public static InitializationType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private InitializationType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:yamcs.protobuf.cop1.InitializationType)
}

