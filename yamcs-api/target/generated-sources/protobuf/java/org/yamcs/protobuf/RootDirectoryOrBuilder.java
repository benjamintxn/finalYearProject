// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yamcs/protobuf/server/server_service.proto

package org.yamcs.protobuf;

public interface RootDirectoryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:yamcs.protobuf.server.RootDirectory)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Root directory location.
   * </pre>
   *
   * <code>optional string directory = 1;</code>
   * @return Whether the directory field is set.
   */
  boolean hasDirectory();
  /**
   * <pre>
   * Root directory location.
   * </pre>
   *
   * <code>optional string directory = 1;</code>
   * @return The directory.
   */
  java.lang.String getDirectory();
  /**
   * <pre>
   * Root directory location.
   * </pre>
   *
   * <code>optional string directory = 1;</code>
   * @return The bytes for directory.
   */
  com.google.protobuf.ByteString
      getDirectoryBytes();

  /**
   * <pre>
   * The type of the file store where this root directory is located.
   * </pre>
   *
   * <code>optional string type = 2;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * The type of the file store where this root directory is located.
   * </pre>
   *
   * <code>optional string type = 2;</code>
   * @return The type.
   */
  java.lang.String getType();
  /**
   * <pre>
   * The type of the file store where this root directory is located.
   * </pre>
   *
   * <code>optional string type = 2;</code>
   * @return The bytes for type.
   */
  com.google.protobuf.ByteString
      getTypeBytes();

  /**
   * <pre>
   * Size in bytes of the file store where this root directory is located.
   * </pre>
   *
   * <code>optional int64 totalSpace = 3;</code>
   * @return Whether the totalSpace field is set.
   */
  boolean hasTotalSpace();
  /**
   * <pre>
   * Size in bytes of the file store where this root directory is located.
   * </pre>
   *
   * <code>optional int64 totalSpace = 3;</code>
   * @return The totalSpace.
   */
  long getTotalSpace();

  /**
   * <pre>
   * Number of unallocated bytes in the file store where this root directory
   * is located.
   * </pre>
   *
   * <code>optional int64 unallocatedSpace = 4;</code>
   * @return Whether the unallocatedSpace field is set.
   */
  boolean hasUnallocatedSpace();
  /**
   * <pre>
   * Number of unallocated bytes in the file store where this root directory
   * is located.
   * </pre>
   *
   * <code>optional int64 unallocatedSpace = 4;</code>
   * @return The unallocatedSpace.
   */
  long getUnallocatedSpace();

  /**
   * <pre>
   * Number of bytes available to Yamcs on the file store where this root
   * directory is located.
   * </pre>
   *
   * <code>optional int64 usableSpace = 5;</code>
   * @return Whether the usableSpace field is set.
   */
  boolean hasUsableSpace();
  /**
   * <pre>
   * Number of bytes available to Yamcs on the file store where this root
   * directory is located.
   * </pre>
   *
   * <code>optional int64 usableSpace = 5;</code>
   * @return The usableSpace.
   */
  long getUsableSpace();
}
